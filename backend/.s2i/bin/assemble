#!/bin/bash

echo "Creating python venv envrionment"
python3.9 -m venv . || virtualenv --python=python3.9 .
echo "Python venv executed and bin folder created"

# Update requirements.txt for additional backend addons
function update_requirements_txt() {
    echo "Processing ADD_REQUIREMENTS... Updating requirements.txt"
    
	# Convert JSON-like array string to newline-separated list
	requirements=$(echo "$ADD_REQUIREMENTS" | sed "s|[][\"']||g" | tr ',' '\n')

	# Append each requirement to requirements.txt
	for requirement in $requirements; do
		echo "$requirement" >> ./backend/requirements.txt
	done
}

echo "Default S2I assemble script will begin"

/usr/libexec/s2i/assemble
rc=$?

if [ $rc -eq 0 ]; then
    echo "After successful default S2I assembling"
	echo "Starting custom S2I assembling"
	
	# Custom S2I assemble for plone.restapi
	#echo "Manual venv activation"
	#source .venv/bin/activate

    echo "Checking for custom installation requirements..."	
	if [ -n "$ADD_REQUIREMENTS" ]; then
        update_requirements_txt
    fi
	echo "Installation requirements check complete"
	
	make install
	# TODO: Fix default S2I pip install. S2I already runs the pip install but have been disabled with DISABLE_SETUP_PY_PROCESSING and DISABLE_PYPROJECT_TOML_PROCESSING.
	# Pip install on requirements.txt made the buildout command available. This is the missing step from the make command
	# buildout -c plone-6.0.x.cfg

	# set permissions for any installed artifacts
	fix-permissions /opt/app-root -P
	
	# manually set permission to instance-wrapper
	chmod +x ./instance-wrapper

	echo "End of custom S2I assembling"
else
    echo "After failed S2I assembling"
fi

exit $rc